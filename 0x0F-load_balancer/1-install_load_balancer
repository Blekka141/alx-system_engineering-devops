#!/usr/bin/env bash
# Installs and configures HAProxy on a load balancer server.

# Set bash unofficial strict mode
set -euo pipefail
IFS=$'\n\t'

# Update system and install necessary packages
echo "Installing necessary packages..."
sudo apt-get update && sudo apt-get install -y software-properties-common haproxy

# Create a new HAProxy configuration file
echo "Configuring HAProxy..."
cat <<EOF | sudo tee /etc/haproxy/haproxy.cfg > /dev/null
# HAProxy configuration file
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend https-frontend
    bind *:443 ssl crt /etc/haproxy/certs/www.lekka141.tech.pem
    mode http
    default_backend web-backend
    option http-server-close
    option forwardfor except 127.0.0.0/8
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

frontend http-in
    bind *:80
    mode http
    redirect scheme https code 301 if !{ ssl_fc }

backend web-backend
    mode http
    balance roundrobin
    server web-01 54.236.8.64:80 check
    server web-02 100.24.72.30:80 check
EOF

# Restart HAProxy to apply the configuration
echo "Restarting HAProxy..."
sudo systemctl restart haproxy
sudo systemctl enable haproxy
echo "HAProxy has been configured and restarted. It is now balancing requests between web-01 and web-02."
